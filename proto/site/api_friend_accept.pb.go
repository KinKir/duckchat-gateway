// Code generated by protoc-gen-go. DO NOT EDIT.
// source: site/api_friend_accept.proto

package site // import "github.com/duckchat/duckchat-gateway/proto/site"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// *
//
// action: api.friend.accept
//
type ApiFriendAcceptRequest struct {
	ApplyUserId          string   `protobuf:"bytes,1,opt,name=applyUserId,proto3" json:"applyUserId,omitempty"`
	Agree                bool     `protobuf:"varint,2,opt,name=agree,proto3" json:"agree,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApiFriendAcceptRequest) Reset()         { *m = ApiFriendAcceptRequest{} }
func (m *ApiFriendAcceptRequest) String() string { return proto.CompactTextString(m) }
func (*ApiFriendAcceptRequest) ProtoMessage()    {}
func (*ApiFriendAcceptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_friend_accept_07f0e0a31a1d2c19, []int{0}
}
func (m *ApiFriendAcceptRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApiFriendAcceptRequest.Unmarshal(m, b)
}
func (m *ApiFriendAcceptRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApiFriendAcceptRequest.Marshal(b, m, deterministic)
}
func (dst *ApiFriendAcceptRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApiFriendAcceptRequest.Merge(dst, src)
}
func (m *ApiFriendAcceptRequest) XXX_Size() int {
	return xxx_messageInfo_ApiFriendAcceptRequest.Size(m)
}
func (m *ApiFriendAcceptRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApiFriendAcceptRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApiFriendAcceptRequest proto.InternalMessageInfo

func (m *ApiFriendAcceptRequest) GetApplyUserId() string {
	if m != nil {
		return m.ApplyUserId
	}
	return ""
}

func (m *ApiFriendAcceptRequest) GetAgree() bool {
	if m != nil {
		return m.Agree
	}
	return false
}

type ApiFriendAcceptResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApiFriendAcceptResponse) Reset()         { *m = ApiFriendAcceptResponse{} }
func (m *ApiFriendAcceptResponse) String() string { return proto.CompactTextString(m) }
func (*ApiFriendAcceptResponse) ProtoMessage()    {}
func (*ApiFriendAcceptResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_friend_accept_07f0e0a31a1d2c19, []int{1}
}
func (m *ApiFriendAcceptResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApiFriendAcceptResponse.Unmarshal(m, b)
}
func (m *ApiFriendAcceptResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApiFriendAcceptResponse.Marshal(b, m, deterministic)
}
func (dst *ApiFriendAcceptResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApiFriendAcceptResponse.Merge(dst, src)
}
func (m *ApiFriendAcceptResponse) XXX_Size() int {
	return xxx_messageInfo_ApiFriendAcceptResponse.Size(m)
}
func (m *ApiFriendAcceptResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ApiFriendAcceptResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ApiFriendAcceptResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ApiFriendAcceptRequest)(nil), "site.ApiFriendAcceptRequest")
	proto.RegisterType((*ApiFriendAcceptResponse)(nil), "site.ApiFriendAcceptResponse")
}

func init() {
	proto.RegisterFile("site/api_friend_accept.proto", fileDescriptor_api_friend_accept_07f0e0a31a1d2c19)
}

var fileDescriptor_api_friend_accept_07f0e0a31a1d2c19 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x29, 0xce, 0x2c, 0x49,
	0xd5, 0x4f, 0x2c, 0xc8, 0x8c, 0x4f, 0x2b, 0xca, 0x4c, 0xcd, 0x4b, 0x89, 0x4f, 0x4c, 0x4e, 0x4e,
	0x2d, 0x28, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xc9, 0x2a, 0x05, 0x70, 0x89,
	0x39, 0x16, 0x64, 0xba, 0x81, 0xe5, 0x1d, 0xc1, 0xd2, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25,
	0x42, 0x0a, 0x5c, 0xdc, 0x89, 0x05, 0x05, 0x39, 0x95, 0xa1, 0xc5, 0xa9, 0x45, 0x9e, 0x29, 0x12,
	0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0xc8, 0x42, 0x42, 0x22, 0x5c, 0xac, 0x89, 0xe9, 0x45, 0xa9,
	0xa9, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0x1c, 0x41, 0x10, 0x8e, 0x92, 0x24, 0x97, 0x38, 0x86, 0x89,
	0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x4e, 0x11, 0x5c, 0xc2, 0xc9, 0xf9, 0xb9, 0x7a, 0x55, 0x89,
	0x39, 0x95, 0x10, 0x47, 0xe8, 0x81, 0xdc, 0x10, 0xa5, 0x9f, 0x9e, 0x59, 0x92, 0x51, 0x9a, 0xa4,
	0x97, 0x9c, 0x9f, 0xab, 0x9f, 0x52, 0x9a, 0x9c, 0x9d, 0x9c, 0x91, 0x58, 0x02, 0x67, 0xe8, 0xa6,
	0x27, 0x96, 0xa4, 0x96, 0x27, 0x56, 0xea, 0x83, 0x35, 0xe8, 0x83, 0x34, 0x9c, 0x62, 0xe2, 0x8f,
	0x4a, 0xcc, 0xa9, 0x8c, 0x09, 0x00, 0x89, 0xc4, 0x04, 0x67, 0x96, 0xa4, 0x26, 0xb1, 0x81, 0x65,
	0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x39, 0x07, 0x95, 0x8f, 0xf3, 0x00, 0x00, 0x00,
}
