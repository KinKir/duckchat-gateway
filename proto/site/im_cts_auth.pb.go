// Code generated by protoc-gen-go. DO NOT EDIT.
// source: site/im_cts_auth.proto

package site // import "github.com/duckchat/duckchat-gateway/proto/site"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// *ï¼š
//
// . this request-api must be called in IM socket.
//
//  action: im.cts.auth
//  error:
// .    error.session
//
type ImCtsAuthRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImCtsAuthRequest) Reset()         { *m = ImCtsAuthRequest{} }
func (m *ImCtsAuthRequest) String() string { return proto.CompactTextString(m) }
func (*ImCtsAuthRequest) ProtoMessage()    {}
func (*ImCtsAuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_im_cts_auth_71c96956ebd48a9c, []int{0}
}
func (m *ImCtsAuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImCtsAuthRequest.Unmarshal(m, b)
}
func (m *ImCtsAuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImCtsAuthRequest.Marshal(b, m, deterministic)
}
func (dst *ImCtsAuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImCtsAuthRequest.Merge(dst, src)
}
func (m *ImCtsAuthRequest) XXX_Size() int {
	return xxx_messageInfo_ImCtsAuthRequest.Size(m)
}
func (m *ImCtsAuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImCtsAuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImCtsAuthRequest proto.InternalMessageInfo

type ImCtsAuthResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImCtsAuthResponse) Reset()         { *m = ImCtsAuthResponse{} }
func (m *ImCtsAuthResponse) String() string { return proto.CompactTextString(m) }
func (*ImCtsAuthResponse) ProtoMessage()    {}
func (*ImCtsAuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_im_cts_auth_71c96956ebd48a9c, []int{1}
}
func (m *ImCtsAuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImCtsAuthResponse.Unmarshal(m, b)
}
func (m *ImCtsAuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImCtsAuthResponse.Marshal(b, m, deterministic)
}
func (dst *ImCtsAuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImCtsAuthResponse.Merge(dst, src)
}
func (m *ImCtsAuthResponse) XXX_Size() int {
	return xxx_messageInfo_ImCtsAuthResponse.Size(m)
}
func (m *ImCtsAuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImCtsAuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImCtsAuthResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ImCtsAuthRequest)(nil), "site.ImCtsAuthRequest")
	proto.RegisterType((*ImCtsAuthResponse)(nil), "site.ImCtsAuthResponse")
}

func init() { proto.RegisterFile("site/im_cts_auth.proto", fileDescriptor_im_cts_auth_71c96956ebd48a9c) }

var fileDescriptor_im_cts_auth_71c96956ebd48a9c = []byte{
	// 159 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2b, 0xce, 0x2c, 0x49,
	0xd5, 0xcf, 0xcc, 0x8d, 0x4f, 0x2e, 0x29, 0x8e, 0x4f, 0x2c, 0x2d, 0xc9, 0xd0, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0x62, 0x01, 0x89, 0x2b, 0x09, 0x71, 0x09, 0x78, 0xe6, 0x3a, 0x97, 0x14, 0x3b,
	0x96, 0x96, 0x64, 0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x28, 0x09, 0x73, 0x09, 0x22, 0x89,
	0x15, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x3a, 0x45, 0x70, 0x09, 0x27, 0xe7, 0xe7, 0xea, 0x55, 0x25,
	0xe6, 0x54, 0x42, 0x0c, 0xd0, 0x03, 0xe9, 0x8f, 0xd2, 0x4f, 0xcf, 0x2c, 0xc9, 0x28, 0x4d, 0xd2,
	0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0x29, 0x4d, 0xce, 0x4e, 0xce, 0x48, 0x2c, 0x81, 0x33, 0x74, 0xd3,
	0x13, 0x4b, 0x52, 0xcb, 0x13, 0x2b, 0xf5, 0xc1, 0x1a, 0xf4, 0x41, 0x1a, 0x4e, 0x31, 0xf1, 0x47,
	0x25, 0xe6, 0x54, 0xc6, 0x04, 0x80, 0x44, 0x62, 0x82, 0x33, 0x4b, 0x52, 0x93, 0xd8, 0xc0, 0xb2,
	0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x3e, 0xd3, 0xe4, 0xbc, 0xa9, 0x00, 0x00, 0x00,
}
