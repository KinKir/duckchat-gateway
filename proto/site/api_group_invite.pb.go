// Code generated by protoc-gen-go. DO NOT EDIT.
// source: site/api_group_invite.proto

package site // import "github.com/duckchat/duckchat-gateway/proto/site"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// *
//
// action: api.group.invite
//
type ApiGroupInviteRequest struct {
	GroupId              string   `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	UserIds              []string `protobuf:"bytes,2,rep,name=userIds,proto3" json:"userIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApiGroupInviteRequest) Reset()         { *m = ApiGroupInviteRequest{} }
func (m *ApiGroupInviteRequest) String() string { return proto.CompactTextString(m) }
func (*ApiGroupInviteRequest) ProtoMessage()    {}
func (*ApiGroupInviteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_group_invite_0e74b51d7111b1f5, []int{0}
}
func (m *ApiGroupInviteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApiGroupInviteRequest.Unmarshal(m, b)
}
func (m *ApiGroupInviteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApiGroupInviteRequest.Marshal(b, m, deterministic)
}
func (dst *ApiGroupInviteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApiGroupInviteRequest.Merge(dst, src)
}
func (m *ApiGroupInviteRequest) XXX_Size() int {
	return xxx_messageInfo_ApiGroupInviteRequest.Size(m)
}
func (m *ApiGroupInviteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApiGroupInviteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApiGroupInviteRequest proto.InternalMessageInfo

func (m *ApiGroupInviteRequest) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

func (m *ApiGroupInviteRequest) GetUserIds() []string {
	if m != nil {
		return m.UserIds
	}
	return nil
}

type ApiGroupInviteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApiGroupInviteResponse) Reset()         { *m = ApiGroupInviteResponse{} }
func (m *ApiGroupInviteResponse) String() string { return proto.CompactTextString(m) }
func (*ApiGroupInviteResponse) ProtoMessage()    {}
func (*ApiGroupInviteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_group_invite_0e74b51d7111b1f5, []int{1}
}
func (m *ApiGroupInviteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApiGroupInviteResponse.Unmarshal(m, b)
}
func (m *ApiGroupInviteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApiGroupInviteResponse.Marshal(b, m, deterministic)
}
func (dst *ApiGroupInviteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApiGroupInviteResponse.Merge(dst, src)
}
func (m *ApiGroupInviteResponse) XXX_Size() int {
	return xxx_messageInfo_ApiGroupInviteResponse.Size(m)
}
func (m *ApiGroupInviteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ApiGroupInviteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ApiGroupInviteResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ApiGroupInviteRequest)(nil), "site.ApiGroupInviteRequest")
	proto.RegisterType((*ApiGroupInviteResponse)(nil), "site.ApiGroupInviteResponse")
}

func init() {
	proto.RegisterFile("site/api_group_invite.proto", fileDescriptor_api_group_invite_0e74b51d7111b1f5)
}

var fileDescriptor_api_group_invite_0e74b51d7111b1f5 = []byte{
	// 197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2e, 0xce, 0x2c, 0x49,
	0xd5, 0x4f, 0x2c, 0xc8, 0x8c, 0x4f, 0x2f, 0xca, 0x2f, 0x2d, 0x88, 0xcf, 0xcc, 0x2b, 0xcb, 0x2c,
	0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0x49, 0x2a, 0x79, 0x73, 0x89, 0x3a,
	0x16, 0x64, 0xba, 0x83, 0xa4, 0x3d, 0xc1, 0xb2, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42,
	0x12, 0x5c, 0xec, 0x60, 0x4d, 0x9e, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x30, 0x2e,
	0x48, 0xa6, 0xb4, 0x38, 0xb5, 0xc8, 0x33, 0xa5, 0x58, 0x82, 0x49, 0x81, 0x19, 0x24, 0x03, 0xe5,
	0x2a, 0x49, 0x70, 0x89, 0xa1, 0x1b, 0x56, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0xea, 0x14, 0xc1, 0x25,
	0x9c, 0x9c, 0x9f, 0xab, 0x57, 0x95, 0x98, 0x53, 0x09, 0xb1, 0x5e, 0x0f, 0x64, 0x7b, 0x94, 0x7e,
	0x7a, 0x66, 0x49, 0x46, 0x69, 0x92, 0x5e, 0x72, 0x7e, 0xae, 0x7e, 0x4a, 0x69, 0x72, 0x76, 0x72,
	0x46, 0x62, 0x09, 0x9c, 0xa1, 0x9b, 0x9e, 0x58, 0x92, 0x5a, 0x9e, 0x58, 0xa9, 0x0f, 0xd6, 0xa0,
	0x0f, 0xd2, 0x70, 0x8a, 0x89, 0x3f, 0x2a, 0x31, 0xa7, 0x32, 0x26, 0x00, 0x24, 0x12, 0x13, 0x9c,
	0x59, 0x92, 0x9a, 0xc4, 0x06, 0x96, 0x35, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x62, 0x74, 0xb1,
	0x70, 0xec, 0x00, 0x00, 0x00,
}
