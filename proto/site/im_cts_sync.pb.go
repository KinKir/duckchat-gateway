// Code generated by protoc-gen-go. DO NOT EDIT.
// source: site/im_cts_sync.proto

package site // import "github.com/duckchat/duckchat-gateway/proto/site"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// *
//
// action: im.cts.sync
//
type ImCtsSyncRequest struct {
	U2Count    int32 `protobuf:"varint,1,opt,name=u2Count,proto3" json:"u2Count,omitempty"`
	GroupCount int32 `protobuf:"varint,2,opt,name=groupCount,proto3" json:"groupCount,omitempty"`
	// if true: update the user's pointer to the value in MessageSyncReq
	// for http-only server.
	UpdatePointer        bool     `protobuf:"varint,3,opt,name=updatePointer,proto3" json:"updatePointer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImCtsSyncRequest) Reset()         { *m = ImCtsSyncRequest{} }
func (m *ImCtsSyncRequest) String() string { return proto.CompactTextString(m) }
func (*ImCtsSyncRequest) ProtoMessage()    {}
func (*ImCtsSyncRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_im_cts_sync_9311e5cbee6312da, []int{0}
}
func (m *ImCtsSyncRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImCtsSyncRequest.Unmarshal(m, b)
}
func (m *ImCtsSyncRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImCtsSyncRequest.Marshal(b, m, deterministic)
}
func (dst *ImCtsSyncRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImCtsSyncRequest.Merge(dst, src)
}
func (m *ImCtsSyncRequest) XXX_Size() int {
	return xxx_messageInfo_ImCtsSyncRequest.Size(m)
}
func (m *ImCtsSyncRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImCtsSyncRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImCtsSyncRequest proto.InternalMessageInfo

func (m *ImCtsSyncRequest) GetU2Count() int32 {
	if m != nil {
		return m.U2Count
	}
	return 0
}

func (m *ImCtsSyncRequest) GetGroupCount() int32 {
	if m != nil {
		return m.GroupCount
	}
	return 0
}

func (m *ImCtsSyncRequest) GetUpdatePointer() bool {
	if m != nil {
		return m.UpdatePointer
	}
	return false
}

func init() {
	proto.RegisterType((*ImCtsSyncRequest)(nil), "site.ImCtsSyncRequest")
}

func init() { proto.RegisterFile("site/im_cts_sync.proto", fileDescriptor_im_cts_sync_9311e5cbee6312da) }

var fileDescriptor_im_cts_sync_9311e5cbee6312da = []byte{
	// 208 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8e, 0xdf, 0x4a, 0x86, 0x30,
	0x18, 0x87, 0xd1, 0xfe, 0x32, 0x88, 0x62, 0x41, 0x78, 0x14, 0x12, 0x1d, 0x78, 0xd2, 0x06, 0x75,
	0x07, 0x79, 0xd4, 0x99, 0xe8, 0x49, 0x88, 0x20, 0x73, 0x0e, 0x1d, 0xb9, 0xcd, 0xb6, 0x77, 0xc4,
	0xba, 0xc4, 0xae, 0x2a, 0xa6, 0x14, 0xdf, 0x77, 0xf6, 0xbe, 0xcf, 0xc3, 0x0f, 0x1e, 0x74, 0xe7,
	0x24, 0x08, 0x2a, 0x55, 0xcf, 0xc1, 0xf5, 0x2e, 0x68, 0x4e, 0x56, 0x6b, 0xc0, 0xe0, 0xd3, 0xc8,
	0x1f, 0x2c, 0xba, 0x79, 0x53, 0x25, 0xb8, 0x26, 0x68, 0x5e, 0x8b, 0x4f, 0x2f, 0x1c, 0xe0, 0x0c,
	0x5d, 0xf8, 0xe7, 0xd2, 0x78, 0x0d, 0x59, 0x92, 0x27, 0xc5, 0x59, 0xfd, 0xf7, 0xe2, 0x7b, 0x84,
	0x26, 0x6b, 0xfc, 0xba, 0xcb, 0x74, 0x93, 0x07, 0x04, 0x3f, 0xa2, 0x2b, 0xbf, 0x8e, 0x0c, 0x44,
	0x65, 0xa4, 0x06, 0x61, 0xb3, 0x93, 0x3c, 0x29, 0x2e, 0xeb, 0x63, 0xf8, 0xfa, 0x8e, 0x6e, 0xb9,
	0x51, 0xe4, 0x9b, 0x2d, 0x61, 0x6f, 0x21, 0x31, 0xa5, 0xa5, 0x93, 0x84, 0xd9, 0x0f, 0x84, 0x1b,
	0x45, 0x47, 0xcf, 0x3f, 0xf8, 0xcc, 0xe0, 0xff, 0x78, 0x9a, 0x18, 0x88, 0x2f, 0x16, 0xe8, 0x36,
	0xa0, 0x71, 0xf0, 0x93, 0x5e, 0xb7, 0x6c, 0x09, 0x5d, 0x15, 0x49, 0xd7, 0x48, 0x10, 0xc3, 0xf9,
	0x66, 0x5f, 0x7e, 0x03, 0x00, 0x00, 0xff, 0xff, 0x85, 0x0a, 0xa3, 0x1a, 0xf4, 0x00, 0x00, 0x00,
}
