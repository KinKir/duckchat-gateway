// Code generated by protoc-gen-go. DO NOT EDIT.
// source: site/api_tmpchat_group.proto

package site // import "github.com/duckchat/duckchat-gateway/proto/site"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// *
//
// action: api.tmpchat.group
//
type ApiTmpchatGroupRequest struct {
	GroupId              string   `protobuf:"bytes,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	ToUserId             string   `protobuf:"bytes,2,opt,name=toUserId,proto3" json:"toUserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApiTmpchatGroupRequest) Reset()         { *m = ApiTmpchatGroupRequest{} }
func (m *ApiTmpchatGroupRequest) String() string { return proto.CompactTextString(m) }
func (*ApiTmpchatGroupRequest) ProtoMessage()    {}
func (*ApiTmpchatGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_tmpchat_group_5dfccf44f192b080, []int{0}
}
func (m *ApiTmpchatGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApiTmpchatGroupRequest.Unmarshal(m, b)
}
func (m *ApiTmpchatGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApiTmpchatGroupRequest.Marshal(b, m, deterministic)
}
func (dst *ApiTmpchatGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApiTmpchatGroupRequest.Merge(dst, src)
}
func (m *ApiTmpchatGroupRequest) XXX_Size() int {
	return xxx_messageInfo_ApiTmpchatGroupRequest.Size(m)
}
func (m *ApiTmpchatGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApiTmpchatGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApiTmpchatGroupRequest proto.InternalMessageInfo

func (m *ApiTmpchatGroupRequest) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

func (m *ApiTmpchatGroupRequest) GetToUserId() string {
	if m != nil {
		return m.ToUserId
	}
	return ""
}

type ApiTmpchatGroupResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApiTmpchatGroupResponse) Reset()         { *m = ApiTmpchatGroupResponse{} }
func (m *ApiTmpchatGroupResponse) String() string { return proto.CompactTextString(m) }
func (*ApiTmpchatGroupResponse) ProtoMessage()    {}
func (*ApiTmpchatGroupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_tmpchat_group_5dfccf44f192b080, []int{1}
}
func (m *ApiTmpchatGroupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApiTmpchatGroupResponse.Unmarshal(m, b)
}
func (m *ApiTmpchatGroupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApiTmpchatGroupResponse.Marshal(b, m, deterministic)
}
func (dst *ApiTmpchatGroupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApiTmpchatGroupResponse.Merge(dst, src)
}
func (m *ApiTmpchatGroupResponse) XXX_Size() int {
	return xxx_messageInfo_ApiTmpchatGroupResponse.Size(m)
}
func (m *ApiTmpchatGroupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ApiTmpchatGroupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ApiTmpchatGroupResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ApiTmpchatGroupRequest)(nil), "site.ApiTmpchatGroupRequest")
	proto.RegisterType((*ApiTmpchatGroupResponse)(nil), "site.ApiTmpchatGroupResponse")
}

func init() {
	proto.RegisterFile("site/api_tmpchat_group.proto", fileDescriptor_api_tmpchat_group_5dfccf44f192b080)
}

var fileDescriptor_api_tmpchat_group_5dfccf44f192b080 = []byte{
	// 197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x29, 0xce, 0x2c, 0x49,
	0xd5, 0x4f, 0x2c, 0xc8, 0x8c, 0x2f, 0xc9, 0x2d, 0x48, 0xce, 0x48, 0x2c, 0x89, 0x4f, 0x2f, 0xca,
	0x2f, 0x2d, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xc9, 0x2a, 0xf9, 0x71, 0x89,
	0x39, 0x16, 0x64, 0x86, 0x40, 0xe4, 0xdd, 0x41, 0xd2, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25,
	0x42, 0x12, 0x5c, 0xec, 0x60, 0xe5, 0x9e, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x30,
	0xae, 0x90, 0x14, 0x17, 0x47, 0x49, 0x7e, 0x68, 0x71, 0x6a, 0x91, 0x67, 0x8a, 0x04, 0x13, 0x58,
	0x0a, 0xce, 0x57, 0x92, 0xe4, 0x12, 0xc7, 0x30, 0xaf, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0xd5, 0x29,
	0x82, 0x4b, 0x38, 0x39, 0x3f, 0x57, 0xaf, 0x2a, 0x31, 0xa7, 0x12, 0xe2, 0x04, 0x3d, 0x90, 0x0b,
	0xa2, 0xf4, 0xd3, 0x33, 0x4b, 0x32, 0x4a, 0x93, 0xf4, 0x92, 0xf3, 0x73, 0xf5, 0x53, 0x4a, 0x93,
	0xb3, 0x41, 0x1a, 0xe1, 0x0c, 0xdd, 0xf4, 0xc4, 0x92, 0xd4, 0xf2, 0xc4, 0x4a, 0x7d, 0xb0, 0x06,
	0x7d, 0x90, 0x86, 0x53, 0x4c, 0xfc, 0x51, 0x89, 0x39, 0x95, 0x31, 0x01, 0x20, 0x91, 0x98, 0xe0,
	0xcc, 0x92, 0xd4, 0x24, 0x36, 0xb0, 0xac, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xa8, 0xd0, 0x26,
	0xd3, 0xf1, 0x00, 0x00, 0x00,
}
